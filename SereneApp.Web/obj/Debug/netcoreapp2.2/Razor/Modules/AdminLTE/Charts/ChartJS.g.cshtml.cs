#pragma checksum "D:\Users\tamir\Source\Repos\SereneApp\SereneApp.Web\Modules\AdminLTE\Charts\ChartJS.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "9b4fdb51504806a95f3ab500b71850ee6c2e8f32"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Modules_AdminLTE_Charts_ChartJS), @"mvc.1.0.view", @"/Modules/AdminLTE/Charts/ChartJS.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Modules/AdminLTE/Charts/ChartJS.cshtml", typeof(AspNetCore.Modules_AdminLTE_Charts_ChartJS))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\Users\tamir\Source\Repos\SereneApp\SereneApp.Web\Modules\_ViewImports.cshtml"
using Serenity;

#line default
#line hidden
#line 2 "D:\Users\tamir\Source\Repos\SereneApp\SereneApp.Web\Modules\_ViewImports.cshtml"
using Serenity.Web;

#line default
#line hidden
#line 3 "D:\Users\tamir\Source\Repos\SereneApp\SereneApp.Web\Modules\_ViewImports.cshtml"
using SereneApp;

#line default
#line hidden
#line 4 "D:\Users\tamir\Source\Repos\SereneApp\SereneApp.Web\Modules\_ViewImports.cshtml"
using Microsoft.AspNetCore.Html;

#line default
#line hidden
#line 5 "D:\Users\tamir\Source\Repos\SereneApp\SereneApp.Web\Modules\_ViewImports.cshtml"
using System.Text;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9b4fdb51504806a95f3ab500b71850ee6c2e8f32", @"/Modules/AdminLTE/Charts/ChartJS.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6b55464e4a71a263d96b09945782f7a492ab71df", @"/Modules/_ViewImports.cshtml")]
    public class Modules_AdminLTE_Charts_ChartJS : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Scripts/chartjs/Chart.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Scripts/adminlte/demo.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "D:\Users\tamir\Source\Repos\SereneApp\SereneApp.Web\Modules\AdminLTE\Charts\ChartJS.cshtml"
  
    ViewData["Title"] = "ChartJS";

#line default
#line hidden
            BeginContext(43, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            DefineSection("Head", async() => {
                BeginContext(60, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(66, 54, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "9b4fdb51504806a95f3ab500b71850ee6c2e8f324807", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(120, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(126, 50, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "9b4fdb51504806a95f3ab500b71850ee6c2e8f326060", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(176, 2, true);
                WriteLiteral("\r\n");
                EndContext();
            }
            );
            BeginContext(181, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            DefineSection("ContentHeader", async() => {
                BeginContext(207, 10, true);
                WriteLiteral("\r\n    <h1>");
                EndContext();
                BeginContext(218, 17, false);
#line 11 "D:\Users\tamir\Source\Repos\SereneApp\SereneApp.Web\Modules\AdminLTE\Charts\ChartJS.cshtml"
   Write(ViewData["Title"]);

#line default
#line hidden
                EndContext();
                BeginContext(235, 22, true);
                WriteLiteral("<small></small></h1>\r\n");
                EndContext();
            }
            );
            BeginContext(260, 12251, true);
            WriteLiteral(@"
<div class=""row"">
    <div class=""col-md-6"">
        <!-- AREA CHART -->
        <div class=""box box-primary"">
            <div class=""box-header with-border"">
                <h3 class=""box-title"">Area Chart</h3>
                <div class=""box-tools pull-right"">
                    <button class=""btn btn-box-tool"" data-widget=""collapse""><i class=""fa fa-minus""></i></button>
                    <button class=""btn btn-box-tool"" data-widget=""remove""><i class=""fa fa-times""></i></button>
                </div>
            </div>
            <div class=""box-body"">
                <div class=""chart"">
                    <canvas id=""areaChart"" style=""height:250px""></canvas>
                </div>
            </div><!-- /.box-body -->
        </div><!-- /.box -->
        <!-- DONUT CHART -->
        <div class=""box box-danger"">
            <div class=""box-header with-border"">
                <h3 class=""box-title"">Donut Chart</h3>
                <div class=""box-tools pull-right"">
             ");
            WriteLiteral(@"       <button class=""btn btn-box-tool"" data-widget=""collapse""><i class=""fa fa-minus""></i></button>
                    <button class=""btn btn-box-tool"" data-widget=""remove""><i class=""fa fa-times""></i></button>
                </div>
            </div>
            <div class=""box-body"">
                <canvas id=""pieChart"" style=""height:250px""></canvas>
            </div><!-- /.box-body -->
        </div><!-- /.box -->
    </div><!-- /.col (LEFT) -->
    <div class=""col-md-6"">
        <!-- LINE CHART -->
        <div class=""box box-info"">
            <div class=""box-header with-border"">
                <h3 class=""box-title"">Line Chart</h3>
                <div class=""box-tools pull-right"">
                    <button class=""btn btn-box-tool"" data-widget=""collapse""><i class=""fa fa-minus""></i></button>
                    <button class=""btn btn-box-tool"" data-widget=""remove""><i class=""fa fa-times""></i></button>
                </div>
            </div>
            <div class=""box-body"">
   ");
            WriteLiteral(@"             <div class=""chart"">
                    <canvas id=""lineChart"" style=""height:250px""></canvas>
                </div>
            </div><!-- /.box-body -->
        </div><!-- /.box -->
        <!-- BAR CHART -->
        <div class=""box box-success"">
            <div class=""box-header with-border"">
                <h3 class=""box-title"">Bar Chart</h3>
                <div class=""box-tools pull-right"">
                    <button class=""btn btn-box-tool"" data-widget=""collapse""><i class=""fa fa-minus""></i></button>
                    <button class=""btn btn-box-tool"" data-widget=""remove""><i class=""fa fa-times""></i></button>
                </div>
            </div>
            <div class=""box-body"">
                <div class=""chart"">
                    <canvas id=""barChart"" style=""height:230px""></canvas>
                </div>
            </div><!-- /.box-body -->
        </div><!-- /.box -->
    </div><!-- /.col (RIGHT) -->
</div><!-- /.row -->

<script>
    $(function () {
");
            WriteLiteral(@"        /* ChartJS
            * -------
            * Here we will create a few charts using ChartJS
            */

        //--------------
        //- AREA CHART -
        //--------------

        // Get context with jQuery - using jQuery's .get() method.
        var areaChartCanvas = $(""#areaChart"").get(0).getContext(""2d"");
        // This will get the first returned node in the jQuery collection.
        var areaChart = new Chart(areaChartCanvas);

        var areaChartData = {
            labels: [""January"", ""February"", ""March"", ""April"", ""May"", ""June"", ""July""],
            datasets: [
            {
                label: ""Electronics"",
                fillColor: ""rgba(210, 214, 222, 1)"",
                strokeColor: ""rgba(210, 214, 222, 1)"",
                pointColor: ""rgba(210, 214, 222, 1)"",
                pointStrokeColor: ""#c1c7d1"",
                pointHighlightFill: ""#fff"",
                pointHighlightStroke: ""rgba(220,220,220,1)"",
                data: [65, 59, 80, ");
            WriteLiteral(@"81, 56, 55, 40]
            },
            {
                label: ""Digital Goods"",
                fillColor: ""rgba(60,141,188,0.9)"",
                strokeColor: ""rgba(60,141,188,0.8)"",
                pointColor: ""#3b8bba"",
                pointStrokeColor: ""rgba(60,141,188,1)"",
                pointHighlightFill: ""#fff"",
                pointHighlightStroke: ""rgba(60,141,188,1)"",
                data: [28, 48, 40, 19, 86, 27, 90]
            }
            ]
        };

        var areaChartOptions = {
            //Boolean - If we should show the scale at all
            showScale: true,
            //Boolean - Whether grid lines are shown across the chart
            scaleShowGridLines: false,
            //String - Colour of the grid lines
            scaleGridLineColor: ""rgba(0,0,0,.05)"",
            //Number - Width of the grid lines
            scaleGridLineWidth: 1,
            //Boolean - Whether to show horizontal lines (except X axis)
            scaleShowHorizontalLines");
            WriteLiteral(@": true,
            //Boolean - Whether to show vertical lines (except Y axis)
            scaleShowVerticalLines: true,
            //Boolean - Whether the line is curved between points
            bezierCurve: true,
            //Number - Tension of the bezier curve between points
            bezierCurveTension: 0.3,
            //Boolean - Whether to show a dot for each point
            pointDot: false,
            //Number - Radius of each point dot in pixels
            pointDotRadius: 4,
            //Number - Pixel width of point dot stroke
            pointDotStrokeWidth: 1,
            //Number - amount extra to add to the radius to cater for hit detection outside the drawn point
            pointHitDetectionRadius: 20,
            //Boolean - Whether to show a stroke for datasets
            datasetStroke: true,
            //Number - Pixel width of dataset stroke
            datasetStrokeWidth: 2,
            //Boolean - Whether to fill the dataset with a color
            data");
            WriteLiteral(@"setFill: true,
            //String - A legend template
            legendTemplate: ""<ul class=\""<%=name.toLowerCase()%>-legend\""><% for (var i=0; i<datasets.length; i++){%><li><span style=\""background-color:<%=datasets[i].lineColor%>\""></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>"",
            //Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
            maintainAspectRatio: true,
            //Boolean - whether to make the chart responsive to window resizing
            responsive: true
        };

        //Create the line chart
        areaChart.Line(areaChartData, areaChartOptions);

        //-------------
        //- LINE CHART -
        //--------------
        var lineChartCanvas = $(""#lineChart"").get(0).getContext(""2d"");
        var lineChart = new Chart(lineChartCanvas);
        var lineChartOptions = areaChartOptions;
        lineChartOptions.datasetFill = false;
       ");
            WriteLiteral(@" lineChart.Line(areaChartData, lineChartOptions);

        //-------------
        //- PIE CHART -
        //-------------
        // Get context with jQuery - using jQuery's .get() method.
        var pieChartCanvas = $(""#pieChart"").get(0).getContext(""2d"");
        var pieChart = new Chart(pieChartCanvas);
        var PieData = [
            {
                value: 700,
                color: ""#f56954"",
                highlight: ""#f56954"",
                label: ""Chrome""
            },
            {
                value: 500,
                color: ""#00a65a"",
                highlight: ""#00a65a"",
                label: ""IE""
            },
            {
                value: 400,
                color: ""#f39c12"",
                highlight: ""#f39c12"",
                label: ""FireFox""
            },
            {
                value: 600,
                color: ""#00c0ef"",
                highlight: ""#00c0ef"",
                label: ""Safari""
            },
            {
  ");
            WriteLiteral(@"              value: 300,
                color: ""#3c8dbc"",
                highlight: ""#3c8dbc"",
                label: ""Opera""
            },
            {
                value: 100,
                color: ""#d2d6de"",
                highlight: ""#d2d6de"",
                label: ""Navigator""
            }
        ];
        var pieOptions = {
            //Boolean - Whether we should show a stroke on each segment
            segmentShowStroke: true,
            //String - The colour of each segment stroke
            segmentStrokeColor: ""#fff"",
            //Number - The width of each segment stroke
            segmentStrokeWidth: 2,
            //Number - The percentage of the chart that we cut out of the middle
            percentageInnerCutout: 50, // This is 0 for Pie charts
            //Number - Amount of animation steps
            animationSteps: 100,
            //String - Animation easing effect
            animationEasing: ""easeOutBounce"",
            //Boolean - Whether we");
            WriteLiteral(@" animate the rotation of the Doughnut
            animateRotate: true,
            //Boolean - Whether we animate scaling the Doughnut from the centre
            animateScale: false,
            //Boolean - whether to make the chart responsive to window resizing
            responsive: true,
            // Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
            maintainAspectRatio: true,
            //String - A legend template
            legendTemplate: ""<ul class=\""<%=name.toLowerCase()%>-legend\""><% for (var i=0; i<segments.length; i++){%><li><span style=\""background-color:<%=segments[i].fillColor%>\""></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>""
        };
        //Create pie or douhnut chart
        // You can switch between pie and douhnut using the method below.
        pieChart.Doughnut(PieData, pieOptions);

        //-------------
        //- BAR CHART -
        //---");
            WriteLiteral(@"----------
        var barChartCanvas = $(""#barChart"").get(0).getContext(""2d"");
        var barChart = new Chart(barChartCanvas);
        var barChartData = areaChartData;
        barChartData.datasets[1].fillColor = ""#00a65a"";
        barChartData.datasets[1].strokeColor = ""#00a65a"";
        barChartData.datasets[1].pointColor = ""#00a65a"";
        var barChartOptions = {
            //Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value
            scaleBeginAtZero: true,
            //Boolean - Whether grid lines are shown across the chart
            scaleShowGridLines: true,
            //String - Colour of the grid lines
            scaleGridLineColor: ""rgba(0,0,0,.05)"",
            //Number - Width of the grid lines
            scaleGridLineWidth: 1,
            //Boolean - Whether to show horizontal lines (except X axis)
            scaleShowHorizontalLines: true,
            //Boolean - Whether to show vertical lines (except Y axis)
 ");
            WriteLiteral(@"           scaleShowVerticalLines: true,
            //Boolean - If there is a stroke on each bar
            barShowStroke: true,
            //Number - Pixel width of the bar stroke
            barStrokeWidth: 2,
            //Number - Spacing between each of the X value sets
            barValueSpacing: 5,
            //Number - Spacing between data sets within X values
            barDatasetSpacing: 1,
            //String - A legend template
            legendTemplate: ""<ul class=\""<%=name.toLowerCase()%>-legend\""><% for (var i=0; i<datasets.length; i++){%><li><span style=\""background-color:<%=datasets[i].fillColor%>\""></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>"",
            //Boolean - whether to make the chart responsive
            responsive: true,
            maintainAspectRatio: true
        };

        barChartOptions.datasetFill = false;
        barChart.Bar(barChartData, barChartOptions);
    });
</script>
");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
