#pragma checksum "D:\Users\tamir\Source\Repos\SereneApp\SereneApp.Web\Modules\AdminLTE\Charts\Flot.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "5eb099c0004450b3585a7910405f5c1e749a9ec1"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Modules_AdminLTE_Charts_Flot), @"mvc.1.0.view", @"/Modules/AdminLTE/Charts/Flot.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Modules/AdminLTE/Charts/Flot.cshtml", typeof(AspNetCore.Modules_AdminLTE_Charts_Flot))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\Users\tamir\Source\Repos\SereneApp\SereneApp.Web\Modules\_ViewImports.cshtml"
using Serenity;

#line default
#line hidden
#line 2 "D:\Users\tamir\Source\Repos\SereneApp\SereneApp.Web\Modules\_ViewImports.cshtml"
using Serenity.Web;

#line default
#line hidden
#line 3 "D:\Users\tamir\Source\Repos\SereneApp\SereneApp.Web\Modules\_ViewImports.cshtml"
using SereneApp;

#line default
#line hidden
#line 4 "D:\Users\tamir\Source\Repos\SereneApp\SereneApp.Web\Modules\_ViewImports.cshtml"
using Microsoft.AspNetCore.Html;

#line default
#line hidden
#line 5 "D:\Users\tamir\Source\Repos\SereneApp\SereneApp.Web\Modules\_ViewImports.cshtml"
using System.Text;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5eb099c0004450b3585a7910405f5c1e749a9ec1", @"/Modules/AdminLTE/Charts/Flot.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6b55464e4a71a263d96b09945782f7a492ab71df", @"/Modules/_ViewImports.cshtml")]
    public class Modules_AdminLTE_Charts_Flot : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Scripts/flot/jquery.flot.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Scripts/flot/jquery.flot.resize.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Scripts/flot/jquery.flot.pie.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Scripts/flot/jquery.flot.categories.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Scripts/adminlte/demo.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "D:\Users\tamir\Source\Repos\SereneApp\SereneApp.Web\Modules\AdminLTE\Charts\Flot.cshtml"
  
    ViewData["Title"] = "Flot Charts";

#line default
#line hidden
            BeginContext(47, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            DefineSection("Head", async() => {
                BeginContext(64, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(70, 57, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5eb099c0004450b3585a7910405f5c1e749a9ec15925", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(127, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(133, 64, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5eb099c0004450b3585a7910405f5c1e749a9ec17178", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(197, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(203, 61, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5eb099c0004450b3585a7910405f5c1e749a9ec18431", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(264, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(270, 68, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5eb099c0004450b3585a7910405f5c1e749a9ec19684", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(338, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(344, 50, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5eb099c0004450b3585a7910405f5c1e749a9ec110937", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(394, 2, true);
                WriteLiteral("\r\n");
                EndContext();
            }
            );
            BeginContext(399, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            DefineSection("ContentHeader", async() => {
                BeginContext(425, 10, true);
                WriteLiteral("\r\n    <h1>");
                EndContext();
                BeginContext(436, 17, false);
#line 14 "D:\Users\tamir\Source\Repos\SereneApp\SereneApp.Web\Modules\AdminLTE\Charts\Flot.cshtml"
   Write(ViewData["Title"]);

#line default
#line hidden
                EndContext();
                BeginContext(453, 22, true);
                WriteLiteral("<small></small></h1>\r\n");
                EndContext();
            }
            );
            BeginContext(478, 11676, true);
            WriteLiteral(@"
<div class=""row"">
    <div class=""col-xs-12"">
        <!-- interactive chart -->
        <div class=""box box-primary"">
            <div class=""box-header with-border"">
                <i class=""fa fa-bar-chart-o""></i>
                <h3 class=""box-title"">Interactive Area Chart</h3>
                <div class=""box-tools pull-right"">
                    Real time
                    <div class=""btn-group"" id=""realtime"" data-toggle=""btn-toggle"">
                        <button type=""button"" class=""btn btn-default btn-xs active"" data-toggle=""on"">On</button>
                        <button type=""button"" class=""btn btn-default btn-xs"" data-toggle=""off"">Off</button>
                    </div>
                </div>
            </div>
            <div class=""box-body"">
                <div id=""interactive"" style=""height: 300px;""></div>
            </div><!-- /.box-body-->
        </div><!-- /.box -->
    </div><!-- /.col -->
</div><!-- /.row -->
<div class=""row"">
    <div class=""col-md-6"">
 ");
            WriteLiteral(@"       <!-- Line chart -->
        <div class=""box box-primary"">
            <div class=""box-header with-border"">
                <i class=""fa fa-bar-chart-o""></i>
                <h3 class=""box-title"">Line Chart</h3>
                <div class=""box-tools pull-right"">
                    <button class=""btn btn-box-tool"" data-widget=""collapse""><i class=""fa fa-minus""></i></button>
                    <button class=""btn btn-box-tool"" data-widget=""remove""><i class=""fa fa-times""></i></button>
                </div>
            </div>
            <div class=""box-body"">
                <div id=""line-chart"" style=""height: 300px;""></div>
            </div><!-- /.box-body-->
        </div><!-- /.box -->
        <!-- Area chart -->
        <div class=""box box-primary"">
            <div class=""box-header with-border"">
                <i class=""fa fa-bar-chart-o""></i>
                <h3 class=""box-title"">Full Width Area Chart</h3>
                <div class=""box-tools pull-right"">
                    ");
            WriteLiteral(@"<button class=""btn btn-box-tool"" data-widget=""collapse""><i class=""fa fa-minus""></i></button>
                    <button class=""btn btn-box-tool"" data-widget=""remove""><i class=""fa fa-times""></i></button>
                </div>
            </div>
            <div class=""box-body"">
                <div id=""area-chart"" style=""height: 338px;"" class=""full-width-chart""></div>
            </div><!-- /.box-body-->
        </div><!-- /.box -->
    </div><!-- /.col -->
    <div class=""col-md-6"">
        <!-- Bar chart -->
        <div class=""box box-primary"">
            <div class=""box-header with-border"">
                <i class=""fa fa-bar-chart-o""></i>
                <h3 class=""box-title"">Bar Chart</h3>
                <div class=""box-tools pull-right"">
                    <button class=""btn btn-box-tool"" data-widget=""collapse""><i class=""fa fa-minus""></i></button>
                    <button class=""btn btn-box-tool"" data-widget=""remove""><i class=""fa fa-times""></i></button>
                </div>");
            WriteLiteral(@"
            </div>
            <div class=""box-body"">
                <div id=""bar-chart"" style=""height: 300px;""></div>
            </div><!-- /.box-body-->
        </div><!-- /.box -->
        <!-- Donut chart -->
        <div class=""box box-primary"">
            <div class=""box-header with-border"">
                <i class=""fa fa-bar-chart-o""></i>
                <h3 class=""box-title"">Donut Chart</h3>
                <div class=""box-tools pull-right"">
                    <button class=""btn btn-box-tool"" data-widget=""collapse""><i class=""fa fa-minus""></i></button>
                    <button class=""btn btn-box-tool"" data-widget=""remove""><i class=""fa fa-times""></i></button>
                </div>
            </div>
            <div class=""box-body"">
                <div id=""donut-chart"" style=""height: 300px;""></div>
            </div><!-- /.box-body-->
        </div><!-- /.box -->
    </div><!-- /.col -->
</div><!-- /.row -->

<script>
    $(function () {
        /*
         * Flot In");
            WriteLiteral(@"teractive Chart
         * -----------------------
         */
        // We use an inline data source in the example, usually data would
        // be fetched from a server
        var data = [], totalPoints = 100;
        function getRandomData() {

            if (data.length > 0)
                data = data.slice(1);

            // Do a random walk
            while (data.length < totalPoints) {

                var prev = data.length > 0 ? data[data.length - 1] : 50,
                        y = prev + Math.random() * 10 - 5;

                if (y < 0) {
                    y = 0;
                } else if (y > 100) {
                    y = 100;
                }

                data.push(y);
            }

            // Zip the generated y values with the x values
            var res = [];
            for (var i = 0; i < data.length; ++i) {
                res.push([i, data[i]]);
            }

            return res;
        }

        var interactive_plot = $.plo");
            WriteLiteral(@"t(""#interactive"", [getRandomData()], {
            grid: {
                borderColor: ""#f3f3f3"",
                borderWidth: 1,
                tickColor: ""#f3f3f3""
            },
            series: {
                shadowSize: 0, // Drawing is faster without shadows
                color: ""#3c8dbc""
            },
            lines: {
                fill: true, //Converts the line chart to area chart
                color: ""#3c8dbc""
            },
            yaxis: {
                min: 0,
                max: 100,
                show: true
            },
            xaxis: {
                show: true
            }
        });

        var updateInterval = 500; //Fetch data ever x milliseconds
        var realtime = ""on""; //If == to on then fetch data every x seconds. else stop fetching
        function update() {

            interactive_plot.setData([getRandomData()]);

            // Since the axes don't change, we don't need to call plot.setupGrid()
            int");
            WriteLiteral(@"eractive_plot.draw();
            if (realtime === ""on"")
                setTimeout(update, updateInterval);
        }

        //INITIALIZE REALTIME DATA FETCHING
        if (realtime === ""on"") {
            update();
        }
        //REALTIME TOGGLE
        $(""#realtime .btn"").click(function () {
            if ($(this).data(""toggle"") === ""on"") {
                realtime = ""on"";
            }
            else {
                realtime = ""off"";
            }
            update();
        });
        /*
         * END INTERACTIVE CHART
         */


        /*
         * LINE CHART
         * ----------
         */
        //LINE randomly generated data

        var sin = [], cos = [];
        for (var i = 0; i < 14; i += 0.5) {
            sin.push([i, Math.sin(i)]);
            cos.push([i, Math.cos(i)]);
        }
        var line_data1 = {
            data: sin,
            color: ""#3c8dbc""
        };
        var line_data2 = {
            data: cos,
          ");
            WriteLiteral(@"  color: ""#00c0ef""
        };
        $.plot(""#line-chart"", [line_data1, line_data2], {
            grid: {
                hoverable: true,
                borderColor: ""#f3f3f3"",
                borderWidth: 1,
                tickColor: ""#f3f3f3""
            },
            series: {
                shadowSize: 0,
                lines: {
                    show: true
                },
                points: {
                    show: true
                }
            },
            lines: {
                fill: false,
                color: [""#3c8dbc"", ""#f56954""]
            },
            yaxis: {
                show: true,
            },
            xaxis: {
                show: true
            }
        });
        //Initialize tooltip on hover
        $('<div class=""tooltip-inner"" id=""line-chart-tooltip""></div>').css({
            position: ""absolute"",
            display: ""none"",
            opacity: 0.8
        }).appendTo(""body"");
        $(""#line-chart"").");
            WriteLiteral(@"bind(""plothover"", function (event, pos, item) {

            if (item) {
                var x = item.datapoint[0].toFixed(2),
                        y = item.datapoint[1].toFixed(2);

                $(""#line-chart-tooltip"").html(item.series.label + "" of "" + x + "" = "" + y)
                        .css({ top: item.pageY + 5, left: item.pageX + 5 })
                        .fadeIn(200);
            } else {
                $(""#line-chart-tooltip"").hide();
            }

        });
        /* END LINE CHART */

        /*
         * FULL WIDTH STATIC AREA CHART
         * -----------------
         */
        var areaData = [[2, 88.0], [3, 93.3], [4, 102.0], [5, 108.5], [6, 115.7], [7, 115.6],
          [8, 124.6], [9, 130.3], [10, 134.3], [11, 141.4], [12, 146.5], [13, 151.7], [14, 159.9],
          [15, 165.4], [16, 167.8], [17, 168.7], [18, 169.5], [19, 168.0]];
        $.plot(""#area-chart"", [areaData], {
            grid: {
                borderWidth: 0
            },
         ");
            WriteLiteral(@"   series: {
                shadowSize: 0, // Drawing is faster without shadows
                color: ""#00c0ef""
            },
            lines: {
                fill: true //Converts the line chart to area chart
            },
            yaxis: {
                show: false
            },
            xaxis: {
                show: false
            }
        });

        /* END AREA CHART */

        /*
         * BAR CHART
         * ---------
         */

        var bar_data = {
            data: [[""January"", 10], [""February"", 8], [""March"", 4], [""April"", 13], [""May"", 17], [""June"", 9]],
            color: ""#3c8dbc""
        };
        $.plot(""#bar-chart"", [bar_data], {
            grid: {
                borderWidth: 1,
                borderColor: ""#f3f3f3"",
                tickColor: ""#f3f3f3""
            },
            series: {
                bars: {
                    show: true,
                    barWidth: 0.5,
                    align: ""center""
         ");
            WriteLiteral(@"       }
            },
            xaxis: {
                mode: ""categories"",
                tickLength: 0
            }
        });
        /* END BAR CHART */

        /*
         * DONUT CHART
         * -----------
         */

        var donutData = [
          { label: ""Series2"", data: 30, color: ""#3c8dbc"" },
          { label: ""Series3"", data: 20, color: ""#0073b7"" },
          { label: ""Series4"", data: 50, color: ""#00c0ef"" }
        ];
        $.plot(""#donut-chart"", donutData, {
            series: {
                pie: {
                    show: true,
                    radius: 1,
                    innerRadius: 0.5,
                    label: {
                        show: true,
                        radius: 2 / 3,
                        formatter: labelFormatter,
                        threshold: 0.1
                    }

                }
            },
            legend: {
                show: false
            }
        });
        /*
      ");
            WriteLiteral(@"   * END DONUT CHART
         */

    });

    /*
     * Custom Label formatter
     * ----------------------
     */
    function labelFormatter(label, series) {
        return '<div style=""font-size:13px; text-align:center; padding:2px; color: #fff; font-weight: 600;"">'
                + label
                + ""<br>""
                + Math.round(series.percent) + ""%</div>"";
    }
</script>
");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
